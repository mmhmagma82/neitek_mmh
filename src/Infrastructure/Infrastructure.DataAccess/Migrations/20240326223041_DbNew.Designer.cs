// <auto-generated />
using System;
using Infrastructure.DataAccess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.DataAccess.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240326223041_DbNew")]
    partial class DbNew
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Domain.Model.ApiUser", b =>
                {
                    b.Property<int>("ApiUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("apiuserid");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApiUserId"), 1L, 1);

                    b.Property<string>("Applicant")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("applicant");

                    b.Property<DateTime>("Expires")
                        .HasColumnType("datetime2")
                        .HasColumnName("expires");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("password");

                    b.Property<string>("Project")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("project");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("role");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("username");

                    b.HasKey("ApiUserId");

                    b.HasIndex("ApiUserId")
                        .IsUnique()
                        .HasDatabaseName("pk_apu_idx");

                    b.ToTable("adm_api_user", (string)null);

                    b.HasData(
                        new
                        {
                            ApiUserId = 1,
                            Applicant = "Neitek",
                            Expires = new DateTime(2100, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "lTLCFRbrKDUnl2moiKUHVg==",
                            Project = "Neitek",
                            Role = "Admin",
                            UserName = "EGQV8z6yuZVrTlZrqBCUlQ=="
                        });
                });

            modelBuilder.Entity("Domain.Model.Goal", b =>
                {
                    b.Property<int>("GoalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("goalid");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GoalId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)")
                        .HasColumnName("name");

                    b.Property<double>("Percentege")
                        .HasColumnType("float")
                        .HasColumnName("percentege");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("register_date");

                    b.Property<int>("TotalTasks")
                        .HasColumnType("int")
                        .HasColumnName("total_tasks");

                    b.HasKey("GoalId");

                    b.HasIndex("GoalId")
                        .IsUnique()
                        .HasDatabaseName("pk_goa_idx");

                    b.ToTable("adm_goal", (string)null);
                });

            modelBuilder.Entity("Domain.Model.GState", b =>
                {
                    b.Property<int>("StateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("stateid");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StateId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("name");

                    b.HasKey("StateId");

                    b.HasIndex("StateId")
                        .IsUnique()
                        .HasDatabaseName("pk_sta_idx");

                    b.ToTable("adm_state", (string)null);

                    b.HasData(
                        new
                        {
                            StateId = 1,
                            Name = "Abierta"
                        },
                        new
                        {
                            StateId = 2,
                            Name = "Completada"
                        });
                });

            modelBuilder.Entity("Domain.Model.GTask", b =>
                {
                    b.Property<int>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("taskid");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaskId"), 1L, 1);

                    b.Property<bool>("IsImportant")
                        .HasColumnType("bit")
                        .HasColumnName("is_important");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)")
                        .HasColumnName("name");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("register_date");

                    b.Property<int>("goalid")
                        .HasColumnType("int");

                    b.Property<int>("stateid")
                        .HasColumnType("int");

                    b.HasKey("TaskId");

                    b.HasIndex("TaskId")
                        .IsUnique()
                        .HasDatabaseName("pk_tas_idx");

                    b.HasIndex("goalid")
                        .HasDatabaseName("fk_goa_tas_idx");

                    b.HasIndex("stateid")
                        .HasDatabaseName("fk_goa_sta_idx");

                    b.ToTable("adm_task", (string)null);
                });

            modelBuilder.Entity("Domain.Model.GTask", b =>
                {
                    b.HasOne("Domain.Model.Goal", "Goal")
                        .WithMany()
                        .HasForeignKey("goalid")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("fk_goa_tas");

                    b.HasOne("Domain.Model.GState", "GState")
                        .WithMany()
                        .HasForeignKey("stateid")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("fk_goa_sta");

                    b.Navigation("GState");

                    b.Navigation("Goal");
                });
#pragma warning restore 612, 618
        }
    }
}
